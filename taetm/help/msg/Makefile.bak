# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

#
#  "TAEmake.tmpl" - imake template customized for TAE
#

# architecture:  sun4

# configfile:  sun.cf

#
# System directories.
#

          SYSINC = /usr/include

#
# Libraries.
#

           IVLIBS = -lIV
        C++IVLIBS = -lIV
          TERMLIB = -ltermlib
             CLIB = -lc
           C++LIB = -lC
             FLIB = -lU77 -lF77
          MATHLIB = -lm
            MCRT1 =
        MOTIFLIBS = -lXm
          MRMLIBS = -lMrm
           XTLIBS = -lXt
          XMULIBS = -lXmu
            XLIBS = -lX11
         XEXTLIBS = -lXext

         XWINLIBS = $(MOTIFLIBS) $(XTLIBS) $(XMULIBS) $(XEXTLIBS) $(XLIBS)

#
# Generic make variables
#

            SHELL = /bin/sh
               AR = ar cq
  BOOTSTRAPCFLAGS =
         ASSEMBLE = false
      HAVETERMLIB = 1
               CC = cc
           CCOPTS =
              C++ = CC -pipe
              CPP = /lib/cpp $(STD_CPP_DEFINES)
           DEPEND = makedepend
   DEPENDC++FLAGS = $(C++FLAGS) -I/usr/lang/SC2.0.1/include/CC_413
     DEPENDCFLAGS = $(CFLAGS)
             FORT = f77
       FORTOBJEXT = .o
             LD++ = CC -pipe
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
               LD = cc
               LN = ln -s
           RANLIB = ranlib
               RM = rm -f
  STD_CPP_DEFINES =
   STD_C++DEFINES = -DXTFUNCPROTO
     STD_CDEFINES = -D_NO_PROTO
   EXTRA_CDEFINES =
 EXTRA_C++DEFINES =
  C++SUFFIX_FLAGS =
       STD_CFLAGS =
   EXTRA_C++FLAGS =
     EXTRA_CFLAGS =
     MOTIF_CFLAGS =
       X11_CFLAGS =
   MOTIF_C++FLAGS =
     X11_C++FLAGS =
 EXTRA_LOAD_FLAGS =
        EXTRALIBS =
     APP_C++FLAGS =
       APP_CFLAGS =
   APP_LOAD_FLAGS =
     APP_LINKLIBS =
          SYSLIBS = $(TERMLIB) $(MATHLIB) $(C++LIB)
       C++SYSLIBS = $(TERMLIB) $(MATHLIB)
       ADASYSLIBS = $(TERMLIB) $(MATHLIB) $(C++LIB)

    C++DEBUGFLAGS = -g
      CDEBUGFLAGS = -g
     LDDEBUGFLAGS = -g
         C++FLAGS = $(C++DEBUGFLAGS) $(C++INCLUDES) $(APP_C++INCLUDES) \
                    $(MOTIF_C++FLAGS) $(X11_C++FLAGS) \
                    $(EXTRA_C++FLAGS) $(APP_C++FLAGS) $(STD_C++DEFINES) \
                    $(EXTRA_C++DEFINES)
           CFLAGS = $(STD_CFLAGS) $(CDEBUGFLAGS) $(CINCLUDES) $(APP_CINCLUDES) \
                    $(MOTIF_CFLAGS) $(X11_CFLAGS) \
                    $(XTAE_INCLUDES) \
                    $(EXTRA_CFLAGS) $(APP_CFLAGS) $(STD_CDEFINES) \
                    $(EXTRA_CDEFINES) $(CCOPTS)
          LDFLAGS = $(LDDEBUGFLAGS) $(EXTRA_LOAD_FLAGS) $(APP_LOAD_FLAGS)
            SPARC = SparcMachine
        BIGENDIAN = false
       WITH_START = 2

        MACROFILE = sun.cf

    RM_FILE_TYPES = .emacs_* *.CKP *.ln *.BAK *.a *.o *..c ,* *~ a.out core errs tags TAGS make.log make.out
 CG_RM_FILE_TYPES = *.tmp *.?log *.par rehearse.pdf
     AFTERINSTALL = $(RM)
          INSTALL = install
    INST_LIBFLAGS = -m 644
      INST_LIBDIR = $$TAELIB
  INST_XTAELIBDIR = $$TAEXTAELIB
 INST_RANLIBFLAGS =
   INST_EXECFLAGS =
      INST_BINDIR = $$TAEBIN
               CP = cp
               MV = mv
             MAKE = make
            IMAKE = imake
        IMAKETMPL = "TAEmake.tmpl"
        IMAKEOPTS = -T$(IMAKETMPL) -I$(TAECONFIGDIR)
       IMAKEFLAGS =
        IMAKE_CMD = $(IMAKE) $(IMAKEOPTS)
     TAECONFIGDIR = $$TAE/config
        WPTDEPLIB = $(TAELIB)/libwpt.a
        WMWDEPLIB = $(TAELIB)/libwmw.a
       TAECDEPLIB = $(TAELIB)/libtaec.a
        TAEDEPLIB = $(TAELIB)/libtae.a
       XTAEDEPLIB = $(TAEXTAELIB)/libXtae.a
      XTERMDEPLIB = $(TAEXTAELIB)/libxterm.a
        DDODEPLIB = $(TAEXTAELIB)/libddo.a
       WPTDEPLIBS = $(WPTDEPLIB) $(XTERMDEPLIB) $(DDODEPLIB) $(WMWDEPLIB)
       TAEDEPLIBS = $(TAECDEPLIB) $(TAEDEPLIB)
          DEPLIBS = $(WPTDEPLIBS) $(TAEDEPLIBS)
       WPTLINKLIB = -lwpt
     XTERMLINKLIB = -lxterm
       DDOLINKLIB = -lddo

XTAEWIDGETLINKLIB = -lXtae
       WMWLINKLIB = -lwmw

      TAECLINKLIB = -ltaec

    TAECXXLINKLIB = -ltaecxx
       TAELINKLIB = -ltae
   C++WPTLINKLIBS = $(WPTLINKLIB) $(XTERMLINKLIB) $(XTAEWIDGETLINKLIB) \
                    $(DDOLINKLIB) $(WMWLINKLIB) $(C++IVLIBS)
      WPTLINKLIBS = $(WPTLINKLIB) $(XTERMLINKLIB) $(XTAEWIDGETLINKLIB) \
                    $(DDOLINKLIB) $(WMWLINKLIB) $(IVLIBS)
      TAELINKLIBS = $(TAECLINKLIB) $(TAELINKLIB)

      DDOLINKLIBS = $(XTAEWIDGETLINKLIB) $(DDOLINKLIB) $(IVLIBS)

   LOGGERLINKLIBS = $(XTERMLINKLIB)
  LOGGER_INCLUDES = $$TAE/Xtae/include

         LINKLIBS = $(WPTLINKLIBS) $(XWINLIBS) $(TAELINKLIBS) \
                    $(EXTRALIBS) $(APP_LINKLIBS) $(SYSLIBS)

      C++LINKLIBS = $(C++WPTLINKLIBS) $(XWINLIBS) $(TAELINKLIBS) \
                    $(EXTRALIBS) $(APP_LINKLIBS) $(C++SYSLIBS)

   TAEVERSIONFILE = .version.o
   LD++DEBUGFLAGS = -g
        LD++FLAGS = $(LD++DEBUGFLAGS) $(EXTRA_LOAD_FLAGS) $(APP_LOAD_FLAGS)
          SORTCMD = sort -u
    LIBSEARCHPATH = -L$$TAE/rtls/$$TAEPLAT -L$$TAELIB -L$$TAEXTAELIB
 CXXLIBSEARCHPATH = -L$$TAECXXLIB -L$$TAELIB -L$$TAEXTAELIB

             SCCS = sccs
             PERL = perl

.SUFFIXES: .cc .C
.C.o:
	$(C++) -c $(C++FLAGS) $<
.cc.o:
	$(C++) -c $(C++FLAGS) $<

#
#	Makefile for TAE INX files.
#

INX = \
	$(TAEHELPINX)/taefac.inx \
	$(TAEHELPINX)/wptfac.inx

all::
	@$(MAKE) -e $(INX)

all::
	@(cd $(TAEPLAT); $(RM) *.msg; $(LN) ../taefac.msg ../wptfac.msg .)

$(TAEHELPINX)/taefac.inx::
	@echo ""
	@echo "	Generating index file $(TAEHELPINX)/taefac.inx..."

$(TAEHELPINX)/taefac.inx:: taefac.msg
	-@test -f $@ && $(CP) $@ $@.bak
	@(taetm "msgbld taefac.msg")
	-@if test -f taefac.inx; then \
	$(INSTALL) -c taefac.inx $(TAEHELPINX); \
	$(RM) $@.bak; \
	$(RM) taefac.inx; \
	echo "	Finished generating index file $@."; \
	else \
	test -f $@.bak && $(MV) $@.bak $@; \
	echo "	Index file generation failed for $@."; \
	fi

$(TAEHELPINX)/wptfac.inx::
	@echo ""
	@echo "	Generating index file $(TAEHELPINX)/wptfac.inx..."

$(TAEHELPINX)/wptfac.inx:: wptfac.msg
	-@test -f $@ && $(CP) $@ $@.bak
	@(taetm "msgbld wptfac.msg")
	-@if test -f wptfac.inx; then \
	$(INSTALL) -c wptfac.inx $(TAEHELPINX); \
	$(RM) $@.bak; \
	$(RM) wptfac.inx; \
	echo "	Finished generating index file $@."; \
	else \
	test -f $@.bak && $(MV) $@.bak $@; \
	echo "	Index file generation failed for $@."; \
	fi

#
# UIL make variables (see OSF/Motif documentation and READMEs)
#

#  Neither "UseColorLogger" nor "UseEnhancedLibs" is defined.

     UIL_LINKLIBS = $(MRMLIBS) $(MOTIFLIBS) $(XTLIBS) $(XLIBS) \
                    $(EXTRALIBS) $(APPLINKLIBS) $(SYSLIBS)

# $UIL is the path to the 'uil' binary, assumed to be in your search path.
              UIL = uil
           DEPUIL =
         UILFLAGS =
   LOCAL_UILFLAGS =
     UIL_INCLUDES =

#
# TAE Plus UIL make variables. DO NOT MODIFY.
# Xtae widgets (e.g., for DDOs) have special UIL include files.
# Enhanced UIL code requires extra include file(s).
#
    XTAE_UIL_INCLUDES = -I$$TAE/Xtae/uil
     ALL_UIL_INCLUDES =  $(UIL_INCLUDES) $(XTAE_UIL_INCLUDES)

#
# TAE Plus header files for Xtae widgets, Color Logger, and
# enhanced UIL generation.
# NOTE: These headers are NOT needed for Wpt applications.
#

        XTAE_INCLUDES =

#
# common rules for all Makefiles
#

Makefiles::
	-@if [ -f Makefile ]; then \
	$(RM) Makefile.bak; \
	$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	@$(IMAKE_CMD) -Ddummy

clean::
	@echo "     Cleaning directory..."
	@$(RM) $(RM_FILE_TYPES) \#*
	@echo "     Finished cleaning directory."
	@echo " "

depend::

#
# dependencies generated by makedepend
#

