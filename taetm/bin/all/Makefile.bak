# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

#
#  "TAEmake.tmpl" - imake template customized for TAE
#

# architecture:  sun4

# configfile:  sun.cf

# platform:  $XConsortium: sun.cf,v 1.32 89/10/11 18:54:52 jim Exp $
# operating system:  SunOS 4.0.3

#
# System directories.
#

          SYSINC = /usr/include

#
# Libraries.
#

          TERMLIB = -ltermlib
             CLIB = -lc
           C++LIB = /usr/local/lib/gcc-gnulib
             FLIB = -lU77 -lF77
          MATHLIB = -lm
            MCRT1 =
           XTLIBS = -lXm -lXt
            XLIBS = -lX11
          XMULIBS = -lXmu
         XWINLIBS = $(XTLIBS) $(XMULIBS) $(XLIBS)
           IVLIBS = -lInterViewsX11 -lgraphic

#
# Generic make variables
#

            SHELL = /bin/sh
               AR = ar cq
  BOOTSTRAPCFLAGS =
         ASSEMBLE = false
      HAVETERMLIB = yes
               CC = cc
           CCOPTS =
              C++ = g++ -fstrength-reduce -pipe
              CPP = /lib/cpp $(STD_CPP_DEFINES)
           DEPEND = makedepend
   DEPENDC++FLAGS = $(C++FLAGS)
     DEPENDCFLAGS = $(CFLAGS)
             FORT = f77
       FORTOBJEXT = .o
             LD++ = g++ -fstrength-reduce -pipe
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
               LD = cc
               LN = ln -s
           RANLIB = ranlib
               RM = rm -f
  STD_CPP_DEFINES =
   STD_C++DEFINES = -DXTFUNCPROTO
     STD_CDEFINES = -D_NO_PROTO
   EXTRA_C++FLAGS =
     EXTRA_CFLAGS =
 EXTRA_LOAD_FLAGS =
        EXTRALIBS =
     APP_C++FLAGS =
       APP_CFLAGS =
   APP_LOAD_FLAGS =
     APP_LINKLIBS =
          SYSLIBS = $(TERMLIB) $(MATHLIB) $(CLIB)
       C++SYSLIBS = $(TERMLIB) $(MATHLIB) $(CLIB) $(C++LIB)

    C++DEBUGFLAGS = -g
      CDEBUGFLAGS = -g
     LDDEBUGFLAGS =
         C++FLAGS = $(C++DEBUGFLAGS) $(C++INCLUDES) $(APP_C++INCLUDES) \
                    $(EXTRA_C++FLAGS) $(APP_C++FLAGS) $(STD_C++DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CINCLUDES) $(APP_CINCLUDES) \
                    $(EXTRA_CFLAGS) $(APP_CFLAGS) $(STD_CDEFINES) $(CCOPTS)
          LDFLAGS = $(LDDEBUGFLAGS) $(EXTRA_LOAD_FLAGS) $(APP_LOAD_FLAGS)
            SPARC = SparcMachine
        BIGENDIAN = false
       WITH_START = 2

        MACROFILE = sun.cf

    RM_FILE_TYPES = .emacs_* *.CKP *.ln *.BAK *.a *.o *..c ,* *~ a.out core errs tags TAGS make.log make.out
 CG_RM_FILE_TYPES = *.tmp *.?log *.par rehearse.pdf
     AFTERINSTALL = $(RM)
          INSTALL = install
    INST_LIBFLAGS = -m 644
      INST_LIBDIR = $$TAELIB
 INST_RANLIBFLAGS =
   INST_EXECFLAGS = -s
      INST_BINDIR = $$TAEBIN/$$TAEPLAT
               CP = cp
               MV = mv
             MAKE = make
            IMAKE = imake
        IMAKETMPL = "TAEmake.tmpl"
        IMAKEOPTS = -T$(IMAKETMPL) -I$(TAECONFIGDIR) SOL_DEF
       IMAKEFLAGS =
        IMAKE_CMD = $(IMAKE) $(IMAKEOPTS)
     TAECONFIGDIR = $$TAE/config
        WPTDEPLIB = $(TAELIB)/libwpt.a
      XTERMDEPLIB = $(TAELIB)/libxterm.a
        DDODEPLIB = $(TAELIB)/libddo.a
        WMWDEPLIB = $(TAELIB)/libwmw.a
       TAECDEPLIB = $(TAELIB)/libtaec.a
        TAEDEPLIB = $(TAELIB)/libtae.a
       WPTDEPLIBS = $(WPTDEPLIB) $(XTERMDEPLIB) $(DDODEPLIB) $(WMWDEPLIB)
       TAEDEPLIBS = $(TAECDEPLIB) $(TAEDEPLIB)
          DEPLIBS = $(WPTDEPLIBS) $(TAEDEPLIBS)
       WPTLINKLIB = -lwpt
     XTERMLINKLIB = -lxterm
       DDOLINKLIB = -lddo
       WMWLINKLIB = -lwmw
      TAECLINKLIB = -ltaec
       TAELINKLIB = -ltae
      WPTLINKLIBS = $(WPTLINKLIB) $(XTERMLINKLIB) $(DDOLINKLIB) $(WMWLINKLIB)
      TAELINKLIBS = $(TAECLINKLIB) $(TAELINKLIB)
         LINKLIBS = $(WPTLINKLIBS) $(IVLIBS) $(XWINLIBS) $(TAELINKLIBS) \
                    $(EXTRALIBS) $(APP_LINKLIBS) $(SYSLIBS)
      C++LINKLIBS = $(WPTLINKLIBS) $(IVLIBS) $(XWINLIBS) $(TAELINKLIBS) \
                    $(EXTRALIBS) $(APP_LINKLIBS) $(C++SYSLIBS)
   TAEVERSIONFILE = .version.o
   LD++DEBUGFLAGS = -g
        LD++FLAGS = $(LD++DEBUGFLAGS) $(EXTRA_LOAD_FLAGS) $(APP_LOAD_FLAGS)
          SORTCMD = sort -u
    LIBSEARCHPATH = -L$$TAELIB

.SUFFIXES: .cc .C
.C.o:
	$(C++) -c $(C++FLAGS) $<
.cc.o:
	$(C++) -c $(C++FLAGS) $<

#
# simple C program build
#
#

CINCLUDES = \
	-I$(TAEINC)

-h::
	@echo "     Building program..."

-h:: -h.o $(DEPLIBS)
	$(RM) -h
	$(LD) $(LDFLAGS) $(LIBSEARCHPATH) \
	-o -h -h.o $(LINKLIBS)
	@echo "     Finished building program."

#
# common rules for all Makefiles
#

Makefiles::
	-@if [ -f Makefile ]; then \
	$(RM) Makefile.bak; \
	$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	@$(IMAKE_CMD) -Ddummy

clean::
	@echo "     Cleaning directory..."
	@$(RM) $(RM_FILE_TYPES) \#*
	@echo "     Finished cleaning directory."
	@echo " "

depend::

#
# dependencies generated by makedepend
#

