
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# This utility, and the companion vicset2, will set up VICAR for use.
# The top-level directory is given by the environment variable $V2TOP.
# It is prompted for if it is not set.
#
# This file must be source'd from csh, since it sets environment variables.
#
# vicset1 sets up items that are inherited by subshells or subprocesses
# (mostly environment variables).  vicset2 sets up items that are not
# inherited (mostly aliases).  This means that only vicset2 needs to be
# rerun if a subshell is created.
#
# This file has been customized for use with a specific project.
# *** DO NOT EDIT THIS FILE DIRECTLY ***
# Instead, modify vicset1.source or the include files.
#
#-----------------------------------------------------------------------
#
if ($?V2TOP == 0) then
   echo -n "Enter the name of the root VICAR directory -> "
   setenv V2TOP $<
endif

# V2TOP_LC is needed instead of doing it inline due to some weird csh bug
setenv V2TOP_LC `echo $V2TOP | tr '[A-Z]' '[a-z]'`
# Removed as we try fixing the lower case constraint of TAE
#if ("$V2TOP" != "$V2TOP_LC") then
#   echo 'Warning: TAE will not work with uppercase characters in $V2TOP.'
#endif
unsetenv V2TOP_LC

#
#-----------------------------------------------------------------------
#
# Determine the CPU type for subdirectories
# This now uses "uname" to determine the platform type, if possible.
# As a backup, if "uname" isn't there, or comes up with an unknown result,
# we use the old C preprocessor trick.  The reason for using "uname" is so
# that a C compiler is not required for average user sites.
# Since the idiots at Sun did not provide a way to tell between SunOS and
# Solaris in the C preprocessor, *ALL COMPILES* and imakes and everything
# must do "-DSOLARIS" if we're on a Solaris machine.  Sigh.  Not only that,
# we must set VICAR_SOLARIS so the build procedure (imakefile.vicar) can
# bootstrap itself by doing -D$(VICAR_SOLARIS).  We can't use VICCPU because
# "sun-solr" has a dash in it and the preprocessor barfs.  Double sigh.
#
#-----------------------------------------------------------------------
#
setenv VICAR_SOLARIS NO_SOLARIS
if ($?VICCPU != 0) unsetenv VICCPU
if (-x /bin/uname) then
   if ("`uname`" == "SunOS") then
      if ("`uname -r | cut -c1`" == "5") then
         setenv VICAR_SOLARIS SOLARIS
         if ("`uname -p`" == "i386") then
            setenv VICCPU x86-solr
         else
            setenv VICCPU sun-solr
         endif
      else
# sun-3 not supported in here - modify if you need it
         setenv VICCPU sun-4
      endif
   endif
   if ("`uname`" == "IRIX") setenv VICCPU sgi
   if ("`uname`" == "IRIX64") setenv VICCPU sgi
   if ("`uname`" == "HP-UX") setenv VICCPU hp-700
   if ("`uname`" == "OSF1") setenv VICCPU axp-unix
   if ("`uname`" == "Linux") then
      if ("`uname -m`" == "i686") setenv VICCPU x86-linux
      if ("`uname -m`" == "x86_64") setenv VICCPU x86-linux
      if ("`uname -m`" == "ppc") setenv VICCPU ppc-linux
      if ("`uname -m`" == "alpha") setenv VICCPU axp-linux
      if ("`uname -m`" == "i586") setenv VICCPU x86-linux
   endif
endif
if ($?VICCPU == 0 && -x /usr/bin/uname) then
   if ("`uname`" == "Darwin") setenv VICCPU mac-osx
endif

if ($?VICCPU == 0) then
   setenv VICCPU `cc -I$V2TOP/rtl/inc -E $V2TOP/util/getcpu_cpp.c | sed -e '/^$/d' -e '%#%d' | tr '[A-Z]"' '[a-z] '`
endif
#
#-----------------------------------------------------------------------
#
# Remove remnants of any old VICAR's from system environment variables
# (needed to support "select" of more than one system).
#
#-----------------------------------------------------------------------
#
# This check is for the system build.  Shouldn't happen in user calls
#
#if (! -x $V2TOP/util/remove_element.csh) then
#   chmod +x $V2TOP/util/remove_element.csh
#endif
#
# X Resources
#
if ($?XFILESEARCHPATH != 0) then
   if ($?OLDV2TOP != 0) then
#      setenv XFILESEARCHPATH `$V2TOP/util/remove_element.csh "$XFILESEARCHPATH" $OLDV2TOP/\*`
   endif
else
# ***NOTE*** X is really weird about XFILESEARCHPATH.  If it is not defined,
# it will look in a default place.  If it is set, this default path is not
# searched.  So, the default must be included in XFILESEARCHPATH.  But, there
# appears to be no way to query what the default is!!!  So, we just use the
# default of /usr/lib/X11/<garbage defined in XtResolvePathname()>.  If you
# have default app-defaults in a different place (e.g. /usr/X11R5/lib/X11),
# you will need to change this pathname.
   set defXdir = /usr/lib/X11
   setenv XFILESEARCHPATH $defXdir/%L/%T/%N%C%S:$defXdir/%l/%T/%N%C%S:$defXdir/%T/%N%C%S:$defXdir/%L/%T/%N%S:$defXdir/%l/%T/%N%S:$defXdir/%T/%N%S
   unset defXdir
endif
#
# Shared library search path.  HP uses SHLIB_PATH, everyone else uses
# LD_LIBRARY_PATH.  We must also add some external libs, and the Java
# shared libs (for callable Java).  See the PATH comments below.
# We also take out /usr/dt/lib and /usr/lib on Solaris to keep them from
# building up too much with multiple select's.  We add them back in later.
#
if ($VICCPU == 'hp-700') then
   if ($?SHLIB_PATH != 0) then
      if ($?OLDV2TOP != 0) then
#         setenv SHLIB_PATH `$V2TOP/util/remove_element.csh "$SHLIB_PATH" $OLDV2TOP/\*`
      endif
   else
      setenv SHLIB_PATH
   endif
else
   if ($?LD_LIBRARY_PATH != 0) then
      if ($?OLDV2TOP != 0) then
#         setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" $OLDV2TOP/\*`
         if ($?ACE_ROOT != 0) then
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" ${ACE_ROOT}/\*`
         endif
         if ($?XERCES_C_ROOT != 0) then
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" ${XERCES_C_ROOT}/\*`
         endif
         if ($?V2CALLABLE_JAVA_LIB != 0) then
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" ${V2CALLABLE_JAVA_LIB}\*`
         endif
         if ($VICCPU == 'sun-solr') then
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" /usr/dt/lib`
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" /usr/lib`
         endif
         if ($VICCPU == 'x86-linux') then
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" /usr/lib`
#            setenv LD_LIBRARY_PATH `$V2TOP/util/remove_element.csh "$LD_LIBRARY_PATH" /lib`
         endif
      endif
   else
      setenv LD_LIBRARY_PATH
   endif
endif
#
# Path.  Note that we must remove $V2JDK as well, since it is outside the
# VICAR tree (it hasn't been set yet so we can use it).  V2JDK is the Java
# in use with this version of VICAR.  PATH must always be set, so don't
# bother checking.  But, we'd better make sure the script is available, or
# we really hose up the path!!  Also, in case $PATH gets too long, and we
# get "Word too long" error, avoid hosing it then too.
#
if (-x $V2TOP/util/remove_element.csh) then
   if ($?OLDV2TOP != 0) then
#      setenv NEWPATH `$V2TOP/util/remove_element.csh "$PATH" $OLDV2TOP/\*`
      if ($status == 0) then
#        setenv PATH $NEWPATH
      endif
   endif
   if ($?V2JDK != 0) then
#      setenv NEWPATH `$V2TOP/util/remove_element.csh "$PATH" $V2JDK/bin`
      if ($status == 0) then
#        setenv PATH $NEWPATH
      endif
   endif
endif
#
# CLASSPATH, for Java.
#
if ($?CLASSPATH != 0) then
   if ($?OLDV2TOP != 0) then
#      setenv CLASSPATH `$V2TOP/util/remove_element.csh "$CLASSPATH" $OLDV2TOP/\*`
   endif
else
   setenv CLASSPATH
endif
#
#-----------------------------------------------------------------------
#
# Finally, set OLDV2TOP so that we can remove references to this directory
# from the system environment variables later, if we need to.  This used to
# be done at the end but putting it here is more robust.  If vicset1 crashes
# later (e.g. while setting up $CLASSPATH), we can still expunge any new
# values next time through.
#
setenv OLDV2TOP $V2TOP
#
#-----------------------------------------------------------------------
#
# Directory Definitions
#
# Note: env vars set to $V2TOP are not used; they are here only to avoid
# -I<blank> on compile lines, which the compilers do not like.  I tried
# defining them to /dev/null but gcc on Linux did not like that.
#

# TAE version 5.2 everywhere.  However, TAE chose not to allow SunOS and
# Solaris versions to exist in the same source tree, so we must have a
# completely separate source tree for SunOS.  NOTE:  If you are running
# SunOS plus other platforms, with no Solaris, you should be able to use a
# single tree.  Just compile TAE for the platforms you need, and modify the
# TAE variable below.
#
setenv TAE $V2TOP/tae52
if ($VICCPU == 'sun-4') then
  setenv TAE $V2TOP/tae52.sun-4
endif
if ($VICCPU == 'axp-unix' || $VICCPU == 'x86-linux' || $VICCPU == 'axp-linux' || $VICCPU == 'ppc-linux' || $VICCPU == 'mac-osx') then
  setenv TAE $V2TOP/tae
endif

setenv V2SOURCE $V2TOP/rtl/source
setenv V2INC $V2TOP/rtl/inc

setenv V2OLB $V2TOP/olb

setenv V2LIB $V2TOP/lib

setenv V2UTIL $V2TOP/util
setenv V2UTILEXE $V2TOP/util

# MotifApp originally came from Doug Young in his book "Object-Oriented
# Programming with C++ and OSF/Motif", Prentice-Hall, 1992, ISBN 0-13-630252-1.
# It has been extensively modified for use in VICAR.
setenv MOTIFAPPINC $V2TOP/MotifApp
setenv MOTIFAPPLIB $V2TOP/MotifApp/$VICCPU
# 
unsetenv CASSOURCE
unsetenv CASSUB
setenv CASINC $V2TOP
unsetenv CASLIB
unsetenv CASCRUISESOURCE
unsetenv CASCRUISESUB
setenv CASCRUISEINC $V2TOP
unsetenv CASCRUISELIB

setenv FEI5LIB $V2TOP/fei5/lib/$VICCPU
setenv FEI5INC $V2TOP/fei5/inc
setenv FEI5SUB $V2TOP/fei5/sub

setenv GUISOURCE $V2TOP/gui/prog
setenv GUISUB $V2TOP/gui/sub
setenv GUIINC $V2TOP/gui/inc
setenv GUILIB $V2TOP/gui/lib/$VICCPU/
setenv SHVTOP $V2TOP/shell_vicar
setenv SHVSOURCE $V2TOP/shell_vicar/prog
setenv SHVSUB $V2TOP/shell_vicar/sub
setenv SHVINC $V2TOP/shell_vicar/inc
setenv SHVLIBDIR $V2TOP/shell_vicar/lib/$VICCPU
setenv SHVLIB $V2TOP/shell_vicar/lib/$VICCPU/libshvic.a
setenv STAETOP $V2TOP/stae
setenv STAESOURCE $V2TOP/stae/source
setenv STAESUB $V2TOP/stae/sub
setenv STAEINC $V2TOP/stae/inc
setenv STAECLIBDIR $V2TOP/stae/lib/$VICCPU
setenv STAECLIB $V2TOP/stae/lib/$VICCPU/libstaec.a
setenv STAELIBDIR $V2TOP/stae/lib/$VICCPU
setenv STAELIB $V2TOP/stae/lib/$VICCPU/libstae.a
setenv P1SOURCE $V2TOP/p1/prog
setenv R1LIB $V2TOP/p1/lib/$VICCPU
setenv P1LIB $V2TOP/p1/lib/$VICCPU

setenv P1SUB $V2TOP/p1/sub
setenv P1INC $V2TOP/p1/inc

setenv P2SOURCE $V2TOP/p2/prog
setenv R2LIB $V2TOP/bin
setenv P2LIB $V2TOP/bin

setenv P2SUB $V2TOP/p2/sub
setenv P2INC $V2TOP/p2/inc
setenv P2GENINC $V2TOP/p2/inc/$VICCPU
unsetenv DIVSOURCE
unsetenv DIVSUB
setenv DIVINC $V2TOP
unsetenv DIVLIB

unsetenv SIRTFSOURCE
unsetenv SIRTFLIB

setenv TLMSOURCE $V2TOP/tlm/prog
setenv TLMSUB $V2TOP/tlm/sub
setenv TLMINC $V2TOP/tlm/inc
setenv TLMGEN $V2TOP/tlm/gen
setenv TLMGENINC $V2TOP/tlm/inc/$VICCPU
setenv TLMLIB $V2TOP/tlm/lib/$VICCPU
unsetenv UPLINKSOURCE
unsetenv UPLINKSUB
setenv UPLINKINC $V2TOP
unsetenv UPLINKLIB
unsetenv UPLINKTOURSOURCE
unsetenv UPLINKTOURSUB
setenv UPLINKTOURINC $V2TOP
unsetenv UPLINKTOURLIB

setenv SSVSOURCE $V2TOP/ssv/prog
setenv SSVSUB $V2TOP/ssv/sub
setenv SSVINC $V2TOP/ssv/inc
setenv SSVLIB $V2TOP/ssv/lib/$VICCPU
unsetenv NEATSOURCE
unsetenv NEATSUB
setenv NEATINC $V2TOP
unsetenv NEATLIB

setenv P3SOURCE $V2TOP/p3/prog
setenv R3LIB $V2TOP/p3/lib/$VICCPU
setenv P3LIB $V2TOP/p3/lib/$VICCPU

setenv P3SUB $V2TOP/p3/sub
setenv P3INC $V2TOP/p3/inc

# We've moved this into the afids_xvd area
# setenv V2DATA $V2TOP/data

setenv V2CONFIG $V2TOP/config
unsetenv MARSTOP
unsetenv MARSCONFIG
setenv MARSINC $V2TOP
unsetenv MARSSOURCE
unsetenv MARSSUB
unsetenv MARSLIB
unsetenv MARSDATA
unsetenv MARSRSRC

setenv SHVICSOURCE $V2TOP/shell_vicar/source
setenv SHVICINC $V2TOP/shell_vicar/inc

setenv VRDIFONTS $V2TOP/vrdi/fonts
setenv VRDIINC $V2TOP/vrdi/inc
setenv VRDILIB $V2TOP/vrdi/lib/$VICCPU

setenv VIDSLIB $V2TOP/vids/lib

setenv MDMSINC $V2TOP/mdms/inc
setenv MDMSLIB $V2TOP/mdms/lib/$VICCPU
setenv MDMSOLB $V2TOP/mdms/olb/$VICCPU

setenv FEI $V2TOP/mdms/test

setenv V2JAVA $V2TOP/java
setenv V2HTML $V2TOP/html
setenv V2DOCSOURCE $V2TOP/docsource

#
# KRB5_CONFIG environment variable set for ops
# /usr/local/vicar/selcat.csh overwrites this for DEV and Test.

setenv KRB5_CONFIG /etc/krb5.conf

#

#-----------------------------------------------------------------------
#
# The following defines the temporary file to use for shell-VICAR output
# parameters.  It should be unique per process tree, but should NOT
# be changed in subprocesses... otherwise a subshell would create a file
# that couldn't be found by the caller (which defeats the whole purpose!).
# As long as vicset1 is run only once per process tree (i.e. check for
# inherited env vars before calling it in .cshrc), this shouldn't be a
# problem.
#
setenv V2PARAM_FILE /tmp/shvic_tmp.${USER}_$$
#

#-----------------------------------------------------------------------
#
# Note:  SunOS 4.1.x (at least) has a problem with lockf() on /tmp when
# /tmp uses the swap partition.  If this is the case on your system, then
# define VRDITMP to point at a world-write temp directory that's not on
# the swap partition, such as /usr/tmp/.  It must include the trailing /.
#
if ($VICCPU == 'mac-osx') then
  setenv VRDITMP /tmp
else
  setenv VRDITMP /usr/tmp/
endif
#
unsetenv MARS_CONFIG_PATH

#-----------------------------------------------------------------------
#
# SPICE and Database Defintions
#
#-----------------------------------------------------------------------
#
# DEFAULTSPICE selects whether the normal mode for accessing SPICE data
# (via getspice2/putspice2) is via local SPICE kernels (LOCALSPICE) or
# remotely through the SPICE server (REMOTESPICE).  This may be overridden
# by application parameters; this merely sets up the default.
#
setenv DEFAULTSPICE REMOTESPICE
#
#-----------------------------------------------------------------------
#
# Set up SPICE definitions.  If you are running remote, no changes are
# required.  If you want to run locally, change the SPICE_CONFIG_FILE
# to point at your local copy of the SPICE kernels
# NOTE: These are for external distribution.  MIPS overrides them via selcat.
#
#setenv MIPSKER		$V2CONFIG/interfaces
#
#setenv SPICEKER		/usr/local/spice/$VICCPU
#setenv BODY_IDS		/usr/local/spice/bodid.dat
#setenv LEAPSECONDS	/usr/local/spice/leapseconds.ker
#setenv SCLK		/usr/local/spice/sclk.ker
#setenv CONSTANTS	/usr/local/spice/p_constants.ker
#setenv BINPOOL		/usr/local/spice/$VICCPU/binpool.ker
#setenv KERNELDB		/usr/local/spice/kdb.gll
#
setenv SPICE_CONFIG_FILE $V2CONFIG/ms_config.$VICCPU
#
#

#-----------------------------------------------------------------------
#
# If you do not have Sybase client software, nothing is required here.
# If you do, you must merge the specified Sybase interface file in with
# your own Sybase interface file.  Contact your Sybase administrator
# or the VICAR Installation Guide for instructions.  SYBASE is only set
# if it is not already; it is not redefined.
#
# Added source the SYBASE configuration script to setup a list of
# new Sybase environment variables and the LD_LIBRARY_PATH
#
if ($?SYBASE == 0) then
   setenv SYBASE $V2CONFIG/interfaces/$VICCPU
endif

# Sybase CT-Library clients looks for the environment variables LANG and 
# LC_ALL at startup.  It uses these value to search for the proper locale
# information in its character set files.  However, the values Sybase 
# has chosen in its locale file for linux are not ANSI/ISO compilant.  
# The mismatch in environment setting causes the CT-Library client application
# to crash without any warnings.  Until Sybase corrects these bugs, the
# workaround is as follow:  -- T. Huang, Aug. 30, 2000
if ("$VICCPU" == "x86-linux") then
   setenv SYBPLATFORM linux
   unsetenv LC_ALL
   unsetenv LANG
endif

#-----------------------------------------------------------------------
# 
# The following tell FEI and the Password Server where to find their
# interface files.  They should not normally have to be changed.
# NOTE: These are for external distribution.  MIPS overrides them via selcat.
#

setenv FEI $V2CONFIG/interfaces

setenv PWDSERVER $V2CONFIG/interfaces

#-----------------------------------------------------------------------
#
# File Definitions
#
#-----------------------------------------------------------------------
#
setenv VRDIDIB $VRDILIB/xddevice.dib
#

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
#
# The following define locations for external software, which is optional
# software used by MIPL for some programs but not developed by MIPL.
# Change the definitions as needed for your system.
#
# Because the current setup for VICAR has most things in
# /usr/local/vicar/external or .../proprietary, we use a relative pathname:
# "$V2TOP/../external" (or proprietary).  If this is NOT the case, define
# V2EXTERNAL or V2PROPRIETARY to be the pathname of the external directory
# BEFORE running vicset1.  Of course, if you have libraries that exist
# elsewhere, you can always change individual definitions.
# THIS NEEDS TO BE CLEANED UP!!!!
# Note that Java is special; V2JDK is NOT relative to these env vars!
#
if ($?V2EXTERNAL == 0) then
   setenv V2EXT $V2TOP/../external
else
   setenv V2EXT $V2EXTERNAL
endif
if ($?V2PROPRIETARY == 0) then
   setenv V2PROP $V2TOP/../proprietary
else
   setenv V2PROP $V2PROPRIETARY
endif
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# Define the location of the JDK (Java Development Kit) used by this
# version of VICAR.  At MIPL, a special directory is used in order for
# different versions of VICAR to coexist at different sites.  If this
# directory is not present, we assume /usr/java.  If *that* is not present,
# then we make no assumptions... the user needs to have set $PATH to
# include a JDK.  However, the capability to compile Java-related native
# code is lost (because V2JAVA_SYS_INC et al is not set properly).
#
# Also, V2JDK defines the JDK to use when a specific version is not specified.
# The Java build scripts in $V2UTIL use this most of the time.  However, if
# a specific version of Java is requested (via JDK_version), then the
# corresponding JDK is looked for *only* in /usr/javaX.Y where X.Y is the
# version number specified.  This is not currently overrideable.  Specifying
# a version number is not recommended!
#
# We set the default first, then our special MIPL directories (if they exist).
#
if (-d /usr/java) then
   setenv V2JDK /usr/java
else
   unsetenv V2JDK
endif
if ("$VICCPU" == "sgi") then
   if (-d /usr/java1.3+JAI1.1) then
      setenv V2JDK /usr/java1.3+JAI1.1
   endif
endif
if ("$VICCPU" == "mac-osx" || "$VICCPU" == "x86-osx") then
   if (-d /System/Library/Frameworks/JavaVM.framework/Home) then
      setenv V2JDK /System/Library/Frameworks/JavaVM.framework/Home
   endif
endif
if (-d /usr/java1.5.0_10+Java3D1.4.0_01+JAI1.1.3+JAI_ImageIO1.1) then
   setenv V2JDK /usr/java1.5.0_10+Java3D1.4.0_01+JAI1.1.3+JAI_ImageIO1.1
endif
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# The following defines the PDS library, which is unfortunately a different
# library (it's newer) than the one below.  It is needed by xvd.
# This includes the lablib3 and OAL (Object Access Library) parts of PDS.
#
setenv PDS_LIBRARY $V2EXT/pds/v1.6_rhe3/$VICCPU
#
unsetenv CASSISS

#-----------------------------------------------------------------------
#
# The following defines the ISIS library. ISIS (Integrated Software for
# Imaging Spectrometers) is a S/W system for processing and analyzing
# the data sets produced by imaging spectrometers and was developed by
# the USGS. These definitions are only backups to enable programs combining
# VICAR and ISIS to build in the standard environment. Anyone wishing to
# make use of ISIS should source $V2TOP/isisset.csh after vicset1 and
# vicset2 which redefine these variables.
#
# ISISDATA is a little different; it's used at run-time to locate certain
# data files.  So it points to copies of the data files in $V2DATA so sites
# without ISIS can still run the programs (e.g. isis2vic).  Running isisset.csh
# will override this as well, back to the real ISIS copy.
#
# Not used in AFIDS
#setenv ISISLIB /usr/local/isisr/lib
#setenv ISISINC /usr/local/isisr/inc
#setenv ISISDATA $V2DATA/isis
#

#-----------------------------------------------------------------------
#
# The following defines the PDS label library, which is used to parse,
# read, and write PDS (Planetary Data System) format labels.
#
setenv PDS_LABEL_LIB $V2EXT/pds_label_lib/v4.0_rhe3/$VICCPU
#

#-----------------------------------------------------------------------
#
# The following defines the TIFF library. The TIFF library  is a set of
# routines to read/write TIFF files.  It also includes GEOTIFF, and the
# ZLIB compression library.
#
setenv TIFFLIB $V2EXT/tiff/v3.8/$VICCPU
#

#-----------------------------------------------------------------------
#
# The following defines the SIMBAD library. The aim of this package is
# to provide a set of routines which allow applications to have access to
# SIMBAD data through the network in a client/server mode.
# A SIMBAD server process is running on the SIMBAD machine, waiting for
# clients. These clients send commands and get the queried data returned
# through UNIX sockets.
#
setenv SIMBADLIB $V2EXT/simbad/v3.3/$VICCPU
#
unsetenv MATRACOMP_LIB

#-----------------------------------------------------------------------
#
# The following defines the library for the PVM (Parallel Virtual Machine)
# software.  There is one additional variable, PVM_ARCH, which is not set
# because it is identical to VICCPU.  If it is determined to be needed
# later, it can be added.3/6/06 - PVM_ARCH is needed by the the pvm
# startup script, so it was added.
#
setenv PVM_ROOT $V2EXT/pvm/v34/pvm3
setenv PVM_CLIB $PVM_ROOT/lib/$VICCPU/libpvm3.a
setenv PVM_FLIB $PVM_ROOT/lib/$VICCPU/libfpvm3.a
setenv PVM_INCL $PVM_ROOT/include
setenv PVM_BIN $PVM_ROOT/bin/$VICCPU
if (-x $PVM_ROOT/lib/pvmgetarch) then
  setenv PVM_ARCH `$PVM_ROOT/lib/pvmgetarch`
endif

#
#-----------------------------------------------------------------------
#
# The following defines the PGPLOT Graphics Subroutine Library
# 
setenv PGPLOTLIB $V2EXT/pgplot/v5.2.1_sunstudio12/$VICCPU
setenv PGPLOT_DIR $V2EXT/pgplot/v5.2.1_sunstudio12/$VICCPU
#

#-----------------------------------------------------------------------
#
# The following defines the location of the NAIF SPICE toolkit.  
#
# This variable points to a directory one level above the top of 
# the SPICE toolkit tree.  There should be a $SPICEROOT/fortran
# and/or a $SPICEROOT/c directory containing the appropriate language toolkit.
#
setenv SPICEROOT $V2EXT/spice/v60_sunstudio12
#
#
#  The location of the NAIF SPICE utilities, such as spacit.
#
setenv SPICEUTIL $SPICEROOT/fortran/$VICCPU/exe
#
# Warning:  SPICELIB is deprecated.  It is no longer used by the
#           VICAR build scripts, and will eventually disappear.
#           Use SPICEROOT instead.
# 
# SPICELIB should point to the directory which contains the object file
# archives, such as 'spicelib.a' or ('SPICELIB.OLB').
#
setenv SPICELIB $SPICEROOT/fortran/$VICCPU/lib
#

#-----------------------------------------------------------------------
#
# The following defines the location of the Kerberos V5 library.
# Contact:  Kerberos is available from MIT, and can be downloaded from 
# the URL http://web.mit.edu/kerberos/www/.
#
# Note: Tru64 (axp-unix) still has an older version of kerberos.  At the 
# time of the upgrade, Cassini confirmed they no longer require Tru64 
# support and our build host was turned off.
# - txh (Nov. 20, 2002)
#
setenv KERBEROS $V2PROP/kerberos/v5.1.3.4/$VICCPU

if ($VICCPU == 'axp-unix') then
setenv KERBEROS $V2PROP/kerberos/v5.1.2.3/$VICCPU
endif

setenv KERBEROSINC $KERBEROS/include
setenv KERBEROSOLB $KERBEROS/lib

#

#-----------------------------------------------------------------------
#
# The following defines the location of the Kerberos V4 library, which is 
# bundled as part of the Kerberos V5 distribution.
# Contact:  Kerberos is available from MIT, and can be downloaded from
# the URL http://web.mit.edu/kerberos/www/.
#
setenv KERBEROS4INC $KERBEROSINC/kerberosIV
setenv KERBEROS4OLB $KERBEROSOLB

#

#-----------------------------------------------------------------------
#
# ACE_ROOT defines the location of the ACE_wrapper library.  Quoting from
# Douglas Schmidt's (the creator of ACE) web page, we find that  
# "the ADAPTIVE Communication Environment (ACE) is an object-oriented 
# framework that implements many core design patterns for concurrent
# communication software. ACE provides a rich set of reusable C++ wrappers
# and framework components that perform common communication software tasks
# across a range of OS platforms".   ACE can be obtained from under the
# URL http://siesta.cs.wustl.edu/~schmidt/ACE.html.
#
if ($VICCPU == 'x86-linux') then
        setenv ACE_ROOT $V2EXT/ACE_wrappers/v5.5/$VICCPU
else
        setenv ACE_ROOT $V2EXT/ACE_wrappers/v5.3.1e/$VICCPU
endif
#
#-----------------------------------------------------------------------
#
# TAO_ROOT defines the location of the TAO library.  Quoting from Douglas
# Schmidt's (the creator of ACE+TAO) web page, we find that
# "The ACE ORB (TAO) is a freely available, open-source, and
# standards-compilant real-time implementation of CORBA 2.x that provides
# efficient, predictable, and scalable quality of service (QoS) end-to-end."
# TAO can be obtained from under URL http://www.cs.wustl.edu/~schmidt/TAO.html
#
if ($?ACE_ROOT != 0) then
setenv TAO_ROOT $ACE_ROOT/TAO
endif
#

#-----------------------------------------------------------------------
#
# The following defines the location for the Xerces C++ XML parsing
# library.  The root URL is <http://xml.apache.org/xerces-c>.  There
# you will find both the downloads and the documentation.
#
setenv XERCES_C_ROOT $V2EXT/xerces-c++/v3.0.0/$VICCPU
#
#

#-----------------------------------------------------------------------
#
# The following defines the library for the Tools.h++ package.  Please
# note that this is a proprietary package and is thus not included in the
# standard VICAR delivery.  Contact RogueWave Software at (503)754-3010
# if you need to purchase this package.
#
if ($VICCPU == 'sgi') then
#   setenv ROGUE $V2PROP/rogue/v7.0.9/$VICCPU/rogue
   setenv ROGUE /pkg/roguewave
else
   setenv ROGUE $V2PROP/rogue/v6.1/$VICCPU/rogue
endif

# RogueWave on Solaris has been upgraded to SourceProp (the latest version
# of Tools.h++.  This specific distribution was built with native standard
# C++ library support.
if ($VICCPU == 'sun-solr') then
   setenv ROGUE $V2PROP/rogue/v8.6.0/workspaces/SOLARIS27/SUNPRO62/15s.native
endif

setenv ROGUEINC $ROGUE
setenv ROGUEOLB $ROGUE/lib
#
#

#-----------------------------------------------------------------------
#
# The following defines the location of the Candela software.  This is
# a colorametric device calibration system.
#
if ($VICCPU == 'sun-4') then
setenv CANDELAHOME $V2PROP/candela/v2.01
endif
#

#-----------------------------------------------------------------------
#
# The following defines the location of the Math77 library.  This library
# was developed by the JPL Computational Mathematics Subgroup.  For more
# information, see <http://math.jpl.nasa.gov> or mail to
# vsnyder@math.jpl.nasa.gov.  This library has been included under the
# VICAR tree in the past; it was moved to the external category in Feb. 96.
#
setenv MATH77LIB $V2EXT/math77/v5.0_sunstudio12/lib/$VICCPU
#

#-----------------------------------------------------------------------
#
# The following defines the location of the MPI (Message Passing Interface)
# library.  MPI is a library for Beowulf-style parallel processing.  The
# implementation being used is MPICH from Argonne National Laboratory.
# See <http://www-unix.mcs.anl.gov/mpi/mpich/>.
#
# Programs can be written to work either with or without the library.  A
# stub library (mpi_fake.com, in p2) takes over if MPI is not enabled.  Define
# LIB_MPI in the imake file to use it, or don't define it to go without.
# The following should be used in the source to get the right include:
# #ifdef ENABLE_MPI
# #include "mpi.h"
# #else
# #include "mpi_fake.h"
# #endif
#
setenv MPILIB $V2EXT/mpich/v1.2.4_rhe3/$VICCPU
#

#-----------------------------------------------------------------------
#
# The following defines the location of the HDF and HDF-EOS libraries.
# The HDF library is developed by NCSA and is a package designed to enable
# access to data in HDF format.  HDF-EOS is an extension to HDF developed
# by NASA that provides extra functionality for image management.
# Available from http://www.hdfgroup.org
#
setenv HDFLIB $V2EXT/HDF/v4.2r4/$VICCPU/HDF4.2r4/
setenv HDFEOSLIB $V2EXT/HDF-EOS/v2.14/$VICCPU/hdfeos

#-----------------------------------------------------------------------
#
# The following defines the CARTO library, a collection of common routines
# used by the Cartographic Applications Group.
#
setenv	CARTOLIB $V2EXT/carto/v1/$VICCPU 

#-----------------------------------------------------------------------
# This library "libdtcc.a" is built from "GEOTRANS 2.2.3- Geographic
# Translator", a geographic projection code library available at
# http://www.nima.mil/GandG/geotrans/geotrans.html. This is "Revised
# version (2.2.3) added Feb 21, 2003". It has been enhanced to allow
# compilation on Sun's "cc: Forte Developer 7 C 5.4 2002/03/09" and
# gnu's "gcc version 2.95.3 20010315 (release)". The changes involved
# fixing nested /**/ comments, and removing embedded ^M inserted perhaps
# from mixing DOS and UNIX source files. Also, two of the projections,
#include "gtsubr.h"

# polarst.c and utm.c were slightly corrected/enhanced.
#
setenv GEOTRANSLIB $V2EXT/geotrans/v2.2.3/$VICCPU

#-----------------------------------------------------------------------
#
# The following defines the GSL library. The GNU Scientific Library is a 
# collection of numerical routines for scientific computing.
# Available from http://www.gnu.org/software/gsl
#
setenv	GSLLIB $V2EXT/gsl/v1.12/$VICCPU

#-----------------------------------------------------------------------
#
# The following defines the location of the Tcl/Tk libraries.
# Available from http://www.tcl.tk
#
setenv TCLTKLIB $V2EXT/tcltk/v8.4/$VICCPU

#-----------------------------------------------------------------------
#
# The following defines the location of the fftw library.
# Available from http://www.fftw.org
#
setenv FFTWLIB $V2EXT/fftw/v3/$VICCPU

#
unsetenv MERIDDLIB
unsetenv SIRTF_PHE_LIB

#-----------------------------------------------------------------------
#
# Package: Expat XML parser library
# Classification: External
# Version: 1.95.7
# Source: http://expat.sourceforge.net
# Description:  A stream-oriented XML parser in which an application
# registers handlers for things the parser might find in the XML document
# (like start tags).
#
# This library is part of the GNU package.  Therefore it is referenced out
# of the standard GNU system locations rather than in V2EXT.  For Solaris,
# that location is listed below.  For Linux (or probably more likely, for
# gcc), the library is automatically available, so no env vars are needed.
#
if ($VICCPU == 'sun-solr') then
  setenv EXPAT_LIB /usr/gnu/lib/
  setenv EXPAT_INC /usr/gnu/src/expat-1.95.7/lib/
endif
#

#-----------------------------------------------------------------------
#
# Package:SUMMITT
# Classification: External
# Version: 1.0
# Source: Mer mission, Dial team - Jack Morrison/John Wright
# Description: This is the summitt source code from the Dial team. It 
# includes dependant libraries such as Grape, Vsl, litwin, and Pds 
# also from the Dial team. Currently only built on linux.
#
if ($VICCPU == 'x86-linux') then
  setenv SUMMITT_HOME $V2TOP/../external/Summitt/v1.0/src
endif

#

#-----------------------------------------------------------------------
#  The MySQL software delivers a very fast, multi-threaded, multi-user, and 
#  robust SQL (Structured Query Language) database server. MySQL Server is intended 
#  for mission-critical, heavy-load production systems as well as for embedding into 
#  mass-deployed software. This library is used to develop MySQL 5.0 database clients.
#
setenv MYSQLLIB /usr/lib/mysql
setenv MYSQLINC /usr/include/mysql
#
#
#

#-----------------------------------------------------------------------
#
# The following sets up the locations for the Java includes used by native
# code.  Although they are system-wide rather than in the VICAR tree, we
# need a symbol here for portability.  Also, note that the names of the
# platform-specific subdir are NOT the same as $VICCPU... an unfortunate
# situation which makes life very messy.
# We use $V2JDK if available, and assume /usr/java otherwise (which is
# probably incorrect given how $V2JDK is set... but we have nothing better
# to do in that case).
#
if ($?V2JDK == 0) then
  setenv V2JDK_tmp /usr/java
else
  setenv V2JDK_tmp $V2JDK
endif
# Formerly there was a check here for Mac, setting it explicitly to:
#   setenv V2JAVA_SYS_INC /System/Library/Frameworks/JavaVM.framework/Headers
# However, current systems seem to have $V2JDK/include pointing to the right
# place, so we use that for consistency.  Don't remember why it was different
# before (rgd 4/3/08).

setenv V2JAVA_SYS_INC $V2JDK_tmp/include

if ("$VICCPU" == "sun-solr") then
  setenv V2JAVA_SYS_PLAT_INC $V2JDK_tmp/include/solaris
else
  if ("$VICCPU" == "x86-linux" || "$VICCPU" == "axp-linux" || "$VICCPU" == "ppc-linux") then
    setenv V2JAVA_SYS_PLAT_INC $V2JDK_tmp/include/linux
  else
    if ("$VICCPU" == "sgi") then
      setenv V2JAVA_SYS_PLAT_INC $V2JDK_tmp/include/irix
    else
# Punt - doesn't matter for OS X
      setenv V2JAVA_SYS_PLAT_INC $V2JAVA_SYS_INC
    endif
  endif
endif
unsetenv V2JDK_tmp
#

#-----------------------------------------------------------------------
#
# The following sets up the locations for the Java link libraries, which are
# used to call Java from a C/C++ program.  We have to do some nastiness to
# handle different platform types (just like above) so be careful on new
# platforms.
# We use $V2JDK if available, and assume /usr/java otherwise (which is
# probably incorrect given how $V2JDK is set... but we have nothing better
# to do in that case).
# Note that libjvm lives in .../client for all but Mac.
#
if ($?V2JDK == 0) then
  setenv V2JDK_tmp /usr/java
else
  setenv V2JDK_tmp $V2JDK
endif

if ("$VICCPU" == "sun-solr") then
  setenv V2CALLABLE_JAVA_LIB $V2JDK_tmp/jre/lib/sparc/
else
  if ("$VICCPU" == "x86-linux" || "$VICCPU" == "x86-solr") then
    setenv V2CALLABLE_JAVA_LIB $V2JDK_tmp/jre/lib/i386/
  else
    if ("$VICCPU" == "sgi") then
      setenv V2CALLABLE_JAVA_LIB $V2JDK_tmp/jre/lib/irix/
    else
      if ("$VICCPU" == "mac-osx" || "$VICCPU" == "x86-osx") then
        setenv V2CALLABLE_JAVA_LIB $V2JDK_tmp/../Libraries/
      else
# Punt - this is wrong but nothing else to do.
        setenv V2CALLABLE_JAVA_LIB $V2JDK_tmp/jre/lib/
      endif
    endif
  endif
endif
unsetenv V2JDK_tmp
#

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
#
# The following externals are for Java only.  The only time most of these
# variables should be used is during the java_fetch_externals script.
#
# The exceptions are those products that are needed only during the build,
# or during the build AND at runtime.  They are:
#
# $J2_ORBACUS: idl->java compiles, build and runtime
# $J2_JWSDP: jaxb compiles, build and runtime
# $J2_ANT: used for ejb_descriptor, build only
# $J2_XDOCLET: used for ejb_descriptor, build only
# $J2_J2EESDK: used for ejb_descriptor, build and runtime
#

#
# Apache ActiveMQ is a high performance Apache 2.0 licensed Message 
# Broker and JMS 1.1 implementation.
#
setenv J2_ACTIVEMQ $V2EXT/ActiveMQ/v5.1.0
#

#-----------------------------------------------------------------------
#
# Package: Orbacus for Java
# Classification: external
# Version: 4.0.5
# Source: see $J2_ORBACUS/README.mipl
# Description:
# The "Orbacus" CORBA ORB for Java, a fully CORBA compliant Object Request
# Broker, unlike the ORB that comes with Java 2.  For more information, see
# http://www.ooc.com/products/orbacus.html
#
setenv J2_ORBACUS $V2EXT/orbacus/v4.0.5
#

#-----------------------------------------------------------------------
#
# Package: CosNotify, the CORBA Notification Service
# Classification: external
# Version: 1.0  
#          (OMG Notification spec version 1.0, 
#          which includes OMG Event spec 1.1)
# Source: Created with the $J2_COSNOTIFY/build.csh script.
# Description:
# Java-language CORBA stubs and skeletons for the CORBA Notification Service.
#
setenv J2_COSNOTIFY $V2EXT/CosNotify/v1.0
#

#-----------------------------------------------------------------------
#
# Package: Xerces for Java
# Classification: external
# Version: 2.4.0
# Source: http://xml.apache.org/dist/xerces-j/Xerces-J-bin.2.4.0.zip
# Description:
# XML tools for Java that include DOM, DOM 2, SAX, and SAX 2 parsers, JAXP 1.2,
# as well as support for XML Schema 1.0.
#
setenv J2_XERCES $V2EXT/xerces/v2.4.0
#

#-----------------------------------------------------------------------
#
# Package: Xalan XSLT
# Classification: external
# Version: 2.1.0
# Source: http://xml.apache.org/xalan-j/dist/xalan-j_2_1_0.tar.gz
# Description:
# An XSL and XPATH processor for Java that transforms XML into HTML, text, or
# other XML documents under direction of an XSL stylesheet.
#
setenv J2_XALAN $V2EXT/xalan/v2.1.0
#

#-----------------------------------------------------------------------
#
# Name: Java 2 Enterprise Edition reference implementation (J2EE from Sun)
# Version: 1.3.1
# Status: external
# Description: Standar Java 2 Enterprise Edition reference implementation 
# contains the following technologies Enterprise JavaBeans (EJB) 2.0, 
# Servlet 2.3, JavaServer Pages (JSP) 1.2, and more.  Web apps built with 
# this reference implementation should be deployable to any J2EE-compliant 
# application servers.  See http://java.sun.com/j2ee
#
setenv J2_J2EESDK $V2EXT/j2ee/j2sdkee1.3.1/lib
#

#-----------------------------------------------------------------------
#
# Package: OODT
# Classification: proprietary (from JPL)
# Version: 1.1.0
# Source: ftp://oodt.jpl.nasa.gov/pub/oodt-1.1.0.tgz
# Description:
# The Object Oriented Data Technology Framework for data management,
# archiving, and XML.
#
setenv J2_OODT $V2PROP/oodt/v1.1.0
#

#-----------------------------------------------------------------------
#
# Name: jConnect Sybase JDBC driver
# Version: 5.5_EBF_11248
# Status: special
# Description: Provides JDBC connectivity with the Sybase database.
# Source: http://www.sybase.com/products/internet/jconnect
#
setenv J2_JCONNECT $V2PROP/sybase/jConnect/v5.5_EBF_11248
#

#-----------------------------------------------------------------------
#
# Package: Jakarta-oro for Java
# Classification: external
# Version: 2.0.4
# Source: http://jakarta.apache.org/builds/jakarta-oro/release/v2.0.4/jakarta-oro-2.0.4.zip
# Description: Regular Expression parsing tools for java. Includes a set of
# perl utilities so that perl style parsing can be done in java.
#
setenv J2_JAKARTA_ORO $V2EXT/jakarta_oro/jakarta-oro-2.0.4
#

#-----------------------------------------------------------------------
#
# Package: util.concurrent for Java
# Classification: external
# Version: 1.3.1
# Source:  http://gee.cs.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/intro.html
# Description: A Java concurrency toolkit for various thread locking 
# utility classes, message queues, and thread pool framework.
#
setenv J2_UTIL_CONCURRENT $V2EXT/util.concurrent/v1.3.1
#

#-----------------------------------------------------------------------
#
# Package: JDOM for Java
# Classification: external
# Version: beta 8
# Source: http://www.jdom.org/downloads/source.html
# Description: An XML utility toolkit for accessing, manipulating, and 
# outputting XML data from Java code.
#
setenv J2_JDOM $V2EXT/jdom/jdom-b8
#

#-----------------------------------------------------------------------
#
# Package: AMMOS Distributed Object Manager (DOM)
# Classification: external
# Version: 28.1
# Source: 
# Description: Java library for interacting with DOM.  This is a required
#   capability for SIRTF/MRO telemetry processing.  It is unfortunate that the
#   DOM acronym is becoming so overloaded, but such is life.  Lastly, DOM
#   uses the SFOC convention for their version numbering.  This explains
#   the high version number for such relatively new code.
#   Hyun Lee/Alice Stanboli 4/13/04
#
setenv J2_AMMOSDOM $V2EXT/AmmosDOM/v28.2
#
unsetenv J2_JWSDP

#-----------------------------------------------------------------------
#
# Package: Java API for XML Based Web Services (JAX-WS)
# Classification: external
# Version: 2.1.1
# Source: https://jax-ws.dev.java.net
# Description: JAX-WS is fundamental technology for developing SOAP 
# based and RESTful Java Web services.  JAX-WS is designed to take the
# place of JAX-RPC in Web services and Web applications.
#
setenv J2_JAXWS $V2EXT/jaxws-ri/v2.1.1
#

#-----------------------------------------------------------------------
#
# Package: Java API for XML Binding (JAXB)
# Classification: external
# Version: 2.1.6
# Source: https://jaxb.dev.java.net
# Description: JAXB gives Java developers an efficient and standard way
# of mapping between XML and Java code.
#
setenv J2_JAXB $V2EXT/jaxb-ri/v2.1.6
#

#-----------------------------------------------------------------------
#
# Package: Log4J for Java
# Classification: external
# Version: 1.2.14
# Source: http://logging.apache.org/log4j
# Description: Log4J is a popular high performance, dynamically configurable 
# logging tookit.
#
setenv J2_LOG4J $V2EXT/log4j/logging-log4j-1.2.14
unsetenv J2_FSCONTEXT

#-----------------------------------------------------------------------
# 
# Package: Jaxen XPath Engine
# Classification: external 
# Version: 1.1
# Source: http://jaxen.codehaus.org
# Description: Universal object model walker, capable of evaluating
# XPath expressions across multiple models.  Currently supported are
# dom4j, JDOM, and DOM
# 
setenv J2_JAXEN $V2EXT/jaxen/jaxen-1.1
#

#-----------------------------------------------------------------------
#
# Package: Jakarta Common Logging for Java
# Classification: external
# Version: 1.0.4
# Source: http://jakarta.apache.org/commons/logging
# Description: Jakarta Common Logging is an abstract interface for different 
# logging toolkits such include JDK1.4 util.logging and log4j.
#
setenv J2_COMMON_LOGGING $V2EXT/jakarta-commons-logging/1.0.4
#

#-----------------------------------------------------------------------
#
# Package: Jakarta Collections Framework for Java
# Classification: external
# Version: 3.1
# Source: http://jakarta.apache.org/commons/collections
# Description: Collections framework used by the connection pooling
# classes.
#
setenv J2_COMMON_COLLECTIONS $V2EXT/commons-collections/v3.1
#

#-----------------------------------------------------------------------
#
# Package: Jakarta Pooling Framework for Java
# Classification: external
# Version: 1.2
# Source: http://jakarta.apache.org/commons/pool
# Description: Pooling Framework used by the Database Connection
# Pooling Framework.
#
setenv J2_COMMON_POOL $V2EXT/commons-pool/v1.2
#

#-----------------------------------------------------------------------
#
# Package: Jakarta Database Connection Pooling Framework for Java
# Classification: external
# Version: 1.2.1
# Source: http://jakarta.apache.org/commons/dbcp
# Description: This Database connection pooling framework is used
# to set up connection pooling for RDBMS.
#
setenv J2_COMMON_DBCP $V2EXT/commons-dbcp/v1.2.1
#

#-----------------------------------------------------------------------
# Package: JGroups (Java Groups)
# Classification: external
# Version: 2.6.3.GA
# Source: http://www.jgroups.org/javagroupsnew/docs/index.html
# Description: JGroups is a groupware toolkit to allow services to
# communicate using multicast, JMS, and routing service.
#
setenv J2_JGROUPS $V2EXT/jgroups/2.6.3.GA
#
unsetenv J2_DERBY

#-----------------------------------------------------------------------
#
# Package: Hibernate
# Classification: external
# Version: 2.1.8
# Source: http://www.hibernate.org
# Description: Hibernate is an opernsource object-to-relational mapping
# framework for Java.  It support all RDBMS using XML mapping.
#

setenv J2_HIBERNATE2 $V2EXT/hibernate/hibernate-2.1

setenv J2_HIBERNATE $V2EXT/hibernate/hibernate-3.1

#
unsetenv J2_XDOCLET
unsetenv J2_ANT

#-----------------------------------------------------------------------
#
# Package: JavaMail
# Classification: external
# Version: 1.3.1
# Source: http://java.sun.com/products/javamail
# Description:  The enterprise java package for portable email clients
#
setenv J2_JAVAMAIL $V2EXT/javamail/javamail-1.3.1
#

#-----------------------------------------------------------------------
#
# Package: JAF
# Classification: external
# Version: 1.0.2
# Source: http://java.sun.com/beans/glasgow/jaf.html
# Description:  The JavaBean Activation Framework used by JavaMail
#
setenv J2_JAF $V2EXT/jaf/jaf-1.0.2
#

#-----------------------------------------------------------------------
#
# Package: JAVA FITS image access library   
# Classification: external
# Version: .97
# Source: http://heasarc.gsfc.nasa.gov/docs/heasarc/fits/java/v0.9/v0.97
# Description:
# A FITS image access library created by Thomas McGlynn of Goddard.
# nom.tam.fits
# Copyright: Thomas McGlynn 1997-1999.  This code may be used for any 
# purpose, non-commercial  or commercial so long as this copyright notice 
# is retained  in the source code or included in or referred to in any
# derived software.
setenv J2_NOM_TAM_FITS $V2EXT/nom_tam_fits/nom_tam_fits-.97
#

#-----------------------------------------------------------------------
#
# Package: JAVA JDBC connection pooling toolkit
# Classification: external
# Version: 0.8.5.2
# Source: http://sourceforge.net/projects/c3p0
# Description:
# C3P0 is a JDBC connection pooling toolkit that implements the standard
# javax.sql.DataSource with connection pooling capability.
setenv J2_C3P0 $V2EXT/c3p0/c3p0-0.8.5.2
#

#-----------------------------------------------------------------------
#
# Package: JAVA XML toolkit
# Classification: external
# Version: 1.6
# Source: http://dom4j.sourceforge.net
# DOM4J is an open source library for working with XML, XPath and XSLT on
# the Java platform using the Java Collections Framework and with full
# support for DOM, SAX and JAXP
setenv J2_DOM4J $V2EXT/dom4j/dom4j-1.6
#

#-----------------------------------------------------------------------
#
# Package: JBOSS (J2EE Application Server)
# Classification: external
# Version: 4.0.2
# Source: http://www.jboss.org
# JBOSS is an open source J2EE-certified application server
setenv J2_JBOSS $V2EXT/jboss/jboss-4.0.2
#

#-----------------------------------------------------------------------
#
# Package: JOGL (Java Bindings For OpenGL)
# Classification: external
# Version: JSR-231 1.1.1 release candidate 8
# Source: http:/jogl.dev.java.net
# JOGL provides Java bindings to the native 3D graphics library, OpenGL.
# It provides full access to the APIs in the OpenGL 2.0 specification
# as well as nearly all vendor extensions, and integrated with the AWT
# and Swing widget sets. 
setenv J2_JOGL $V2EXT/jogl/v1.1.1_rc8/
#

#-----------------------------------------------------------------------
#
# Package: JBPM
# Classification: external
# Version: 3.0.2
# Source: http://www.jboss.com/products/jbpm
# Jboss Business Process Management allows creation and execution of flexible
# business processes.
setenv J2_JBPM $V2EXT/jbpm/jbpm-3.0.2
#
unsetenv J2_MYSQL

#-----------------------------------------------------------------------
#
# Package: PDS Atlas Web Services
# Classification: external
# Version: 2.0
# Source: PDS
# PDS Atlas Web Services provides web service access to the Atlas.
# Services include querying facilities and product ingest and 
# deletions.
setenv J2_ATLAS_SERVICE $V2EXT/pds_atlas_service/v2.0
#

#-----------------------------------------------------------------------
#
# Package: JSch
# Classification: external
# Version: 0.1.38
# Source: http://www.jcraft.com/jsch/
# JSch is pure Java implementation of ssh.
setenv J2_JSCH $V2EXT/jsch/jsch-0.1.38
#

#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# Set up TAE
#
#
# Check for TAE version 4 or 5
if (-d $TAE/csh) then
# version 4
  source $TAE/csh/usrassign
  source $TAE/csh/pgmassign
else
# version 5
  if (-f $TAE/bin/csh/taesetupclassic) then
# version 5.3 - is this really right???
    source $TAE/bin/csh/taesetup
    source $TAE/bin/csh/taesetupmin
    source $TAE/bin/csh/taesetupclassic
    source $TAE/bin/csh/taesetupsrc
  else
# version 5.2
    source $TAE/bin/csh/taesetup
  endif
endif
#
#
# Set up debugging for TAE.  This is only needed for the Solaris Workshop 5.0
# compilers.  Normally you just setenv DEBUGGER to the pathname of your
# debugger, but WS5.0 requires a -D option which TAE cannot handle, thus the
# intermediate script.
#
if ($VICCPU == 'sun-solr') then
  setenv DEBUGGER $V2UTIL/workshop-D.sh
endif
#
#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
#
# Paths and system environment variables
#
#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
#
setenv V2FTNINC ""

  setenv V2FTNINC "$V2FTNINC $V2INC"

if (-d $TAE/csh) then
  setenv V2FTNINC "$V2FTNINC $TINC"
else
  setenv V2FTNINC "$V2FTNINC $TAEINC"
endif

  setenv V2FTNINC "$V2FTNINC $VRDIINC"

  setenv V2FTNINC "$V2FTNINC $P1INC"

  setenv V2FTNINC "$V2FTNINC $P2INC"

  setenv V2FTNINC "$V2FTNINC $P3INC"

# X Pixmap locations.  Note:  this WILL wipe out any prior XBMLANGPATH
# settings.  However, the odds of that are so remote...
#
setenv XBMLANGPATH %D:$R2LIB/%B

#
# Shared library search path
#
if ($VICCPU == 'hp-700') then
   setenv SHLIB_PATH ${SHLIB_PATH}:${V2OLB}

   setenv SHLIB_PATH ${SHLIB_PATH}:${MDMSOLB}

else
# The special check for Solaris and /usr/dt/lib should be removed.  Probably
# need to put a Run-path on the link for /usr/dt/lib to fix this.
# The /usr/lib and /lib additions are an efficiency thing.  By
# putting those at the front of the list, programs run faster.
# This is done piecemeal to facilitate project-build conditionals.  It's
# less efficient when run this way, but far easier.
   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${V2OLB}

   if ($?ACE_ROOT != 0) then
      if ($VICCPU != 'sun-solr') then
         setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ACE_ROOT}/lib
      endif
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ACE_ROOT}/ace
   endif

   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${MDMSOLB}
   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${R2LIB}

   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${XERCES_C_ROOT}/lib

   if ($VICCPU == 'sun-solr') then
      setenv LD_LIBRARY_PATH /usr/lib:${LD_LIBRARY_PATH}:/usr/dt/lib
   endif
   if ($VICCPU == 'x86-linux') then
      setenv LD_LIBRARY_PATH /usr/lib:/lib:${LD_LIBRARY_PATH}
   endif

   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${V2HTML}/lib/${VICCPU}

   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${V2CALLABLE_JAVA_LIB}:${V2CALLABLE_JAVA_LIB}/client

endif
#
# Set up for sgi IRIX6.5 n32 build
#
  if ($VICCPU == 'sgi') setenv SGI_ABI -n32
#
# Path.  Note that $V2JDK (if it exists) must be first to override any system
# JDK setting.
# This is done piecemeal to facilitate project-build conditionals.  It's
# less efficient when run this way, but far easier.
#

set path = ($path $TAE/bin/{all,$TAEPLAT})

set path = ($path $GUILIB)

set path = ($path $MDMSLIB)

set path = ($path $V2LIB)

set path = ($path $TLMLIB)

if ($?V2JDK != 0) then
   set path = ($V2JDK/bin $path)
endif

#

# Classpath.  This is ugly because *each* jar file must be put into
# $CLASSPATH *individually*... you can't just specify the directory.  Argh.
# In order to avoid error messages, we do an "ls" first to see if there are
# any jar files, before doing the foreach.
# Note:  if you change this, the corresponding code in $V2UTIL/java_build.csh
# should also be changed.
#
if ("$CLASSPATH" == "") then
   setenv CLASSPATH ${V2TOP}/j
else
   setenv CLASSPATH ${CLASSPATH}:${V2TOP}/j
endif
ls $V2TOP/j/*.jar >& /dev/null
if ($status == 0) then
   foreach jar ($V2TOP/j/*.jar)
      setenv CLASSPATH ${CLASSPATH}:$jar
   end
endif
