procedure help=*
parm inp string count=(0:12) default=--
parm tpfile string default=""
parm options string default=""
refgbl $syschar
body
local f string
local files string
let files = ""
if ($count(inp) >= 1)
   let f = inp(1)
   let files = "&f"
end-if
if ($count(inp) >= 2)
   let f = inp(2)
   let files = "&files &f"
end-if
if ($count(inp) >= 3)
   let f = inp(3)
   let files = "&files &f"
end-if

local tpf string
local tpfile_arg string
let tpfile_arg = ""
if ($count(tpfile) >= 1)
   let tpf = tpfile(1)
   let tpfile_arg = "-pfile &tpf"
end-if

if ($syschar(1) = "UNIX")
   ush $R2LIB/tp &options &tpfile_arg &files &
else
   dcl spawn/nowait tp &options &tpfile_arg &files
end-if
end-proc
.title
VICAR program tp
.help
The tp program is an X Windows tiepoint editing program.  It is intended as 
the replacement for a number of VIDS/VRDI-base programs, most notably PICREG.

Complete documentation for tp is available on-line at:
<http://www-mipl.jpl.nasa.gov/~vxp/tp.html>
or via clicking on the various Help options in the program.

tp is an interactive, X Windows program.  Before using it, you must have
set up the X display connection.  On a Unix machine, this is typically done
via "setenv DISPLAY" while on VMS it is typically done via "set disp/create".
Consult system documentation for details on establishing an X connection, or
refer to the on-line tutorial in Mosaic at
<http://www-mipl.jpl.nasa.gov/wstutor/set_x_display.html>
Please note that the X display must be set up outside of the VICAR environment.
.page
Running the program:

The tp program may be run either from within VICAR, or directly from
the shell or DCL.  In order to run it from the shell (in Unix), make sure
"$R2LIB" is in your path, or specify it explicitly:

	% $R2LIB/tp image.red image.grn image.blu -pfile tpfile.ibis

From VMS, "tp" is automatically defined for you:

	$ tp image.red image.grn image.blu -pfile tpfile.ibis
.page
From VICAR, usage conforms to standard VICAR input file conventions:

	VICAR> tp (image.red,image.grn,image.blu)

tp can handle 0 to 12 image filenames

Command-line options may be given to the program via the "options" parameter;
see the help for that parameter for details.

.level1
.vari inp
Input file(s)
.vari tpfile
Tiepoint file (IBIS format)
.vari options
Command-line options
.level2
.vari inp
Zero to twelve input files.  

.vari options
Various command-line options can be given to the program.  Typical options
might be a -display to redirect the display somewhere, or a -xrm to set a
resource.  See the on-line help for details.

One trouble spot with TAE is when you need to quote strings.  For example,
a -xrm specification has to be of the form:  -xrm "resource: value"  where the
double quotes are actually present in the string submitted to DCL or the
shell.  Specifying such resources is unfortunately platform-dependent.
Unix will accept single quotes (usually), while VMS requires double quotes.
You can double the quotes for VMS, however, this doesn't work on Unix.
For example:

Unix:
	tp /usr/local/images/io.red opt="-xrm '*background: grey'"

VMS:
	tp images:io.red opt="-xrm ""*background: grey"""
.end
