	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
C
C  IBIS ROUTINE AGGRG2
C  2-JAN-95 ...CRI...  MSTP S/W CONVERSION (VICAR PORTING)
C
C  PURPOSE:  AGGREGATES COLUMNS OF NUMBERS IN AN IBIS INTERFACE FILE BAS
C  EQUAL INDICES IN A CONTROL COLUMN AND COLLAPSES THE FILE BASED UPON R
C  OF THE SAME INDICES.  OPTIONS ARE AVAILABLE TO PICK MAXIMUM IN COLLAP
C  TO PICK ACCORDING TO A MAXIMUM IN ANOTHER COLUMN.
C
C  USER PARAMETERS:
C
C  AGCOL,N - THE KEYWORD AGCOL SPECIFIES THE COLUMN WHICH WILL BE USED A
C            CONTROL FOR COLUMNS TO BE COMPRESSED.  ANY REPEATED NUMBER
C            THIS COLUMN WILL FORM ONE ROW IN THE OUTPUT FILE.
C  AREA,N -  THE INTEGER N SPECIFIES THE COLUMN TO BE USED FOR AN AREA M
C            KEY.  A MAXIMUM VALUE WILL BE FOUND WITHIN EACH INDEX GROUP
C  BYAR,N1,...,NK - THIS SPECIFIES COLUMNS WHICH WILL BE COLLAPSED CHOOS
C            THE VALUE INDICATED BY THE MAXIMUM AREA ROW INDEX.
C  SUMCOL,N1,...,NL - SPECIFIES COLUMNS WHICH WILL BE COLLAPSED BY AGGRE
C            ALL VALUES FOR AN INDEX GROUP.
C
	IMPLICIT INTEGER(A-Z)
	INTEGER*2 CS1,CS2
	REAL R,FCOL1(250000)
	DIMENSION ACTION(100),BYARCL(100),SUMCL(100)
	COMMON/COM/COL1(250000),CS1(250000),CS2(250000)
	EQUIVALENCE (FCOL1(1),COL1(1))
	DATA AGCO,AREA/1,1/,ACTION/100*0/
C
C  INITIALIZE, GET PARAMETERS, OPEN FILES
C
        CALL IFMESSAGE('AGGRG2 version 2-JAN-95')
        CALL XVUNIT(RUNIT, 'INP', 1, STATUS, ' ')
        CALL XVUNIT(WUNIT, 'OUT', 1, STATUS, ' ')

	CALL IBIS_FILE_OPEN(RUNIT,INIBIS,'READ',0,0,' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(RUNIT,STATUS,1)
        CALL IBIS_FILE_GET(INIBIS,'NC',NCOL,1,1)
        CALL IBIS_FILE_GET(INIBIS,'NR',CLEN,1,1)

	CALL XVPARM ('AGCOL',AGCO,NAGCO,AGCODF,1)
	CALL XVPARM ('AREA',AREA,NAREA,AREADF,1)
	CALL XVPARM ('BYAR',BYARCL,NBYAR,BYARDF,20)
	CALL XVPARM ('SUMCOL',SUMCL,NSUMC,SUMCDF,20)
	IF (BYARDF.EQ.0) THEN
	  DO I=1,NBYAR
	    ACTION(BYARCL(I)) = 1
	  ENDDO
	ENDIF
	IF (SUMCDF.EQ.0) THEN
	  DO I=1,NSUMC
	    ACTION(SUMCL(I)) = 2
	  ENDDO
	ENDIF
C
C  PLACE CONTROL RANGES IN CS1 VECTOR
C
        CALL IBIS_COLUMN_READ(INIBIS,FCOL1,AGCO,1,CLEN,STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL(INIBIS,STATUS,1)
	NWCLEN = 0
	I = 1
	J = I + 1
	DO WHILE (J.LE.CLEN)
	  IF (FCOL1(J).EQ.FCOL1(I)) THEN
	    J = J + 1
	  ELSE
	    NWCLEN = NWCLEN + 1
	    CS1(NWCLEN) = J - I
	    I = J
	    J = J + 1
	  ENDIF
	ENDDO
	NWCLEN = NWCLEN + 1
	CS1(NWCLEN) = J - I
C
C  PLACE MAXIMUM AREAS IN CS2 VECTOR.
C
        CALL IBIS_COLUMN_READ(INIBIS,FCOL1,AREA,1,CLEN,STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL(INIBIS,STATUS,1)
	JU = 0
	DO I=1,NWCLEN
	  JL = JU+1
	  JU = JU+CS1(I)
	  R = -1.
	  DO J=JL,JU
	    CS2(J) = 0
	    IF (ABS(FCOL1(J)).GT.R) THEN
	      JMAX = J
	      R = ABS(FCOL1(J))
	    ENDIF
	  ENDDO
	  CS2(JMAX) = 1
	ENDDO
C
C  FOR EACH COLUMN PERFORM THE APPROPRIATE FUNCTION
C
	NWNRCL = (NWCLEN+127)/128
	CALL IBIS_FILE_OPEN(WUNIT,OUTIBIS,'WRITE',NCOL,NWCLEN,
     *                      ' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(WUNIT,STATUS,1)
	DO IX=1,NCOL
          CALL IBIS_COLUMN_READ(INIBIS,COL1,IX,1,CLEN,STATUS)
          IF (STATUS.NE.1) CALL IBIS_SIGNAL(INIBIS,STATUS,1)
	  JU = 0
	  IF (ACTION(IX).EQ.1) THEN
	    DO I=1,CLEN
	      IF (CS2(I).EQ.0) FCOL1(I) = 0.
	    ENDDO
	  ENDIF
	  DO I=1,NWCLEN
	    JL = JU + 1
	    JU = JU + CS1(I)
	    IF (ACTION(IX).LE.1) THEN
	      JMAX = JL
	      DO J=JL,JU
		IF (ABS(FCOL1(J)).GT.ABS(FCOL1(JMAX))) JMAX = J
	      ENDDO
	      FCOL1(I) = FCOL1(JMAX)
	    ELSE
	      R = 0.
	      DO J=JL,JU
	        R = R + FCOL1(J)
	      ENDDO
	      FCOL1(I) = R
	    ENDIF
	  ENDDO
          CALL IBIS_COLUMN_WRITE(OUTIBIS,FCOL1,IX,1,NWCLEN,STATUS)
          IF (STATUS.NE.1) CALL IBIS_SIGNAL(OUTIBIS,STATUS,1)
	ENDDO
C
	CALL PRNT(4,1,NWCLEN,' COLUMN LENGTH.')
	CALL IBIS_FILE_CLOSE(INIBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(RUNIT,STATUS,1)
	CALL IBIS_FILE_CLOSE(OUTIBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(WUNIT,STATUS,1)
        RETURN
	END
