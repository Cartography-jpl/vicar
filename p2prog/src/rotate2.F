      INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44
C     PROGRAM ROTATE2
C      9 JUN 93   ...SP....   MADE PORTABLE FOR UNIX.  CHANGED TO USE XVEACTION
C                             INSTEAD OF XVCHECK.
C      4 NOV 88   ...SP....   ADDED CODE TO HANDLE CASE OF NLO=1 OR NSO=1.
C      1 MAY 84   ...CCA...   CONVERT TO VICAR2
C      1 JAN 84   ...CCA...   CONVERT TO VAX, NO VXCTL
C     25 JUL 72   ...ARG...   INITIAL VERSIONM
C      1 MAR 73   ...FGS...   CORRECT CENTER OPTION IN OUTPUT PICTURE
C     22 MAR 73   ...FGS...   INCLUDE FAKIBCOM
C     15 MAY 73   ...FGS...   DELETE PARAMETER DATA SET
C     27 JUN 75   ...DAH...   CHANGES FOR CONVERSION TO 360/OS
C     29 MAR 79   ...JAM...   INCORPORATE HALF AND SPLINE OPTIONS
C      1 APR 79   ...JAM...   SET DEFAULT ANGLE TO ZERO
C      1 APR 79   ...JAM...   REMOVE EQUIVALENCE BETWEEN KWD AND PAR
C
C ** PURPOSE... TO GENERATE GEOM PARAMETER SETS DESCRIBING PICTURE
C               ROTATIONS AND TO FETCH LGEOM. 
C
C ** TO  'GEOM' USE...
C     ROTATE2 INP SIZE=() LINE=X SAMP=X ANGL=X CENT=(L,S)
C
C         WHERE
C   LINE, SAMP, ARE THE CENTER OF ROTATION FOR THE INPUT PICTURE
C   THESE MAY BE DEFAULTED TO THE CENTER OF THE INPUT PICTURE
C
C   ANGL IS THE ROTATION IN DEGREES CLOCKWISE FROM 'UP'.
C
C   CENT IS THE LINE AND SAMPLE LOCATION OF THE CENTER OF ROTATION
C   IN THE OUTPUT PICTURE. IT CAN BE DEFAULTED TO THE CENTER OF THE
C   OUTPUT PICTURE.
C
C   THE KEYWORD 'NOIN' MAY BE USED FOR TRANSMISSION TO LGEOM
C
      REAL RPARM(16),LL,LS
      INTEGER SL,SS,STAT, NLO2, NSO2
      CHARACTER*256 PDS
      CHARACTER*8 FORMAT
      LOGICAL XVPTST
      CHARACTER*132 OUT1
      CHARACTER*132 OUT2
      DATA OUT1/' REGION (    ,     ,     ,     ) OF THE INPUT PICTURE I
     +S ROTATED         DEGREES ABOUT       ,        '/

C==================================================================

      CALL XVEACTION('SA',' ') ! SET XV ERROR ACTION

      ICENT = 0
      ILINE = 0
      ISAMP = 0
      ANG=0.
      CALL ZIA(RPARM,16)

C        OPEN INPUT DATA SET
      CALL XVUNIT(IUNIT,'INP',1,STAT,' ')
      CALL XVOPEN(IUNIT,STAT,' ')

C        GET DATA FORMAT AND CHECK
      CALL XVGET(IUNIT,STAT,'FORMAT',FORMAT,' ')
      IF(FORMAT.NE.'BYTE'.AND.FORMAT.NE.'HALF') THEN
         CALL QPRINT(' ROTATE2 ACCEPTS BYTE AND HALFWORD DATA ONLY')
         CALL ABEND
      END IF

C        GET SIZE INFORMATION 
      CALL XVSIZE(SL,SS,NLO,NSO,NLI,NSI)

C        CLOSE INPUT DATA SET
      CALL XVCLOSE(IUNIT,STAT,' ')

C        GET NAME OF PARAMETER DATA SET
      CALL XVP('PDS',PDS,NPDS)

C           PROCESS PARAMETERS
C        'LINE'
      CALL XVPARM('LINE',RPARM,ICOUNT,IDEF,1)
      IF(ICOUNT .NE. 0) THEN
         CLI = RPARM(1)
	 CLO = CLI - SL + 1
	 ILINE = 1
      END IF

C        'SAMPLE'
      CALL XVPARM('SAMPLE',RPARM,ICOUNT,IDEF,1)
      IF(ICOUNT .NE. 0) THEN
	 CSI = RPARM(1)
	 CSO = CSI - SS + 1
	 ISAMP = 1
      END IF

C        'CENTER'
      CALL XVPARM('CENTER',RPARM,ICOUNT,IDEF,2)
      IF(ICOUNT .NE. 0) THEN
	 CLO = RPARM(1)
	 CSO = RPARM(2)
	 ICENT = 1
      END IF

C        'ANGLE'
      CALL XVPARM('ANGLE',RPARM,ICOUNT,IDEF,1)
      IF(ICOUNT .NE. 0) ANG = RPARM(1)


      NLI = MIN0(NLI+1-SL,NLO)
      NSI = MIN0(NSI+1-SS,NSO)
      WRITE (OUT1(10:13),'(I4)') SL
      WRITE (OUT1(16:19),'(I4)') SS
      WRITE (OUT1(22:25),'(I4)') NLI
      WRITE (OUT1(28:31),'(I4)') NSI
      IF(ILINE .EQ. 0) CLI=.5*(SL+NLI)
      IF(ISAMP .EQ. 0) CSI=.5*(SS+NSI)
      IF(ICENT .EQ. 0) CLO=.5*(1+NLO)
      IF(ICENT .EQ. 0) CSO=.5*(1+NSO)
      WRITE (OUT1(66:72),'(F7.1)') ANG
      WRITE (OUT1(87:92),'(F6.1)') CLI
      WRITE (OUT1(95:100),'(F6.1)') CSI
      CALL XVMESSAGE(OUT1(2:102),' ')
      WRITE (OUT2,9900) CLO,CSO
9900  FORMAT (
     +' THE CENTER OF ROTATION IN THE OUTPUT PICTURE IS LOCATED AT PIXEL
     +     ',F6.1,',  ',F6.1)
      CALL XVMESSAGE(OUT2(2:85),' ')

      ANG=-ANG*3.14159/180.
      C=COS(ANG)
      S=SIN(ANG)


      NLO2 = MAX( NLO, 2 )   ! IF NLO OR NSO IS 1, THEN USE 2 AS THE
      NSO2 = MAX( NSO, 2 )   ! ENDING TIEPOINT LOCATION SO RECTANGLE
                             ! WILL NOT BE DEGENERATE.

      DS=CSI-CSO
      DL=CLI-CLO
      FL=1.-CLO
      FS=1.-CSO
      LL=NLO2-CLO
      LS=NSO2-CSO

C        Open the parameter data set
      I = 3
      IF (XVPTST('NOINTERP')) I = I + 1
      IF (FORMAT .EQ. 'HALF') I = I + 1
      CALL XVPOPEN(STAT,I,64,PDS,'SA',IDUMMY)

C        Write out the parameters
      CALL XVPOUT(STAT,'NAH',1,'INT',1)
      CALL XVPOUT(STAT,'NAV',1,'INT',1)

      RPARM(1) = 1
      RPARM(2) = 1
      RPARM(3) = S*FS+C*FL-FL+DL + 1
      RPARM(4) = C*FS-S*FL-FS+DS + 1
      RPARM(5) = 1
      RPARM(6) = NSO2
      RPARM(7) = S*LS+C*FL-FL+DL + 1
      RPARM(8) = C*LS-S*FL-LS+DS + NSO2
      RPARM(9) = NLO2
      RPARM(10) = 1
      RPARM(11) = S*FS+C*LL-LL+DL + NLO2
      RPARM(12) = C*FS-S*LL-FS+DS + 1
      RPARM(13) = NLO2
      RPARM(14) = NSO2
      RPARM(15) = S*LS+C*LL-LL+DL + NLO2
      RPARM(16) = C*LS-S*LL-LS+DS + NSO2

      CALL XVPOUT(STAT,'TIEPOINT',RPARM,'REAL',16)

      IF(XVPTST('NOINTERP')) THEN
         CALL XVPOUT(STAT,'INTERP','NOIN','STRING',1)
      END IF

      IF(FORMAT .EQ. 'HALF') THEN
         CALL XVPOUT(STAT,'FORMAT','HALF','STRING',1)
      END IF

C        Close the parameter data set
      CALL XVPCLOSE(STAT)

      RETURN
      END
