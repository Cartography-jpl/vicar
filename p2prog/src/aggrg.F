	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
C
C  IBIS ROUTINE AGGRG
C
C  PURPOSE:  SUM COLUMNS OF NUMBERS IN AN IBIS INTERFACE FILE BASED UPON
C  INDICES IN A SPECIFIED CONTROL COLUMN.
C
C  2 JAN 95 ...CRI...  MSTP S/W CONVERSION (VICAR PORTING)
C
C  17 SEPTEMBER 1999   BAM - BUMPED UP THE BUFFERS TO 2,000,000
C
	IMPLICIT INTEGER (A-Z)
	INTEGER COL1(2000000)
	REAL	COL2(2000000), SUM
	INTEGER SUMCOL(40), TOCOL(40)

        CALL IFMESSAGE('AGGRG version 17-SEPT-99')
	CALL XVP ('AGCOL',AGCOL,COUNT)
	CALL XVPARM ('SUMCOL',SUMCOL,NSUM,DEF,40)
	CALL XVPARM ('TOCOL',TOCOL,NTO,DEF,40)
	IF (DEF.NE.0) THEN
	  DO I=1,NSUM
	    TOCOL(I) = SUMCOL(I)
	  ENDDO
	ENDIF
	CALL XVPARM ('INDEXCOL', INDEXCOL, COUNT,INDEXDEF,1)

        CALL XVUNIT(UNIT, 'INP', 1, STATUS, ' ')

	CALL IBIS_FILE_OPEN(UNIT,IBIS,'UPDATE',0,0,' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(UNIT,STATUS,1)
        CALL IBIS_FILE_GET(IBIS,'NC',NCOL,1,1)
        CALL IBIS_FILE_GET(IBIS,'NR',CLEN,1,1)

        CALL IBIS_COLUMN_READ(IBIS,COL1,AGCOL,1,CLEN,STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	CALL CONCOL (COL1,CLEN)

	DO ICOL=1,NSUM
          CALL IBIS_COLUMN_READ(IBIS,COL2,SUMCOL(ICOL),1,CLEN,STATUS)
          IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	  IL = 1
	  DO WHILE (IL.LE.CLEN)
	    IU = COL1(IL)
	    SUM = 0.
	    DO I=IL,IU
	      SUM = SUM+COL2(I)
	    ENDDO
	    DO I=IL,IU
	      COL2(I) = SUM
	    ENDDO
	    IL = IU+1
	  ENDDO
          CALL IBIS_COLUMN_WRITE(IBIS,COL2,TOCOL(ICOL),1,CLEN,STATUS)
          IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	ENDDO

	IF (INDEXDEF .EQ. 0) THEN
	  IL = 1
	  DO WHILE (IL.LE.CLEN)
	    IU = COL1(IL)
	    N = 1
	    DO I=IL,IU
	      COL2(I) = N
	      N = N + 1
	    ENDDO
	    IL = IU+1
	  ENDDO
          CALL IBIS_COLUMN_WRITE(IBIS,COL2,INDEXCOL,1,CLEN,STATUS)
          IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	ENDIF

	CALL IBIS_FILE_CLOSE(IBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(UNIT,STATUS,1)

        RETURN
	END


	SUBROUTINE CONCOL (COL,LEN)
	IMPLICIT INTEGER(A-Z)
	DIMENSION COL(LEN)
C
	N = 1
	C = COL(1)
	DO I=1,LEN
	  IF (COL(I).NE.C) N = I
	  C = COL(I)
 	  COL(N) = I
	ENDDO
	RETURN
	END
